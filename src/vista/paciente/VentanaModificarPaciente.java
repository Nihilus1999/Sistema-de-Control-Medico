/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package vista.paciente;

import controlador.Coordinador;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.vo.FechaVO;
import modelo.vo.GeneroVO;
import modelo.vo.MunicipioVO;
import modelo.vo.PacienteVO;
import modelo.vo.TipoSangreVO;

/**
 *
 * @author Diego
 */
public class VentanaModificarPaciente extends javax.swing.JFrame {
    private Coordinador miCoordinador;
    private DefaultTableModel modelo;
   // VentanaModificarPaciente m1 = new VentanaModificarPaciente();
    
    /** Creates new form ModificarPaciente */
    public VentanaModificarPaciente() {
        
        initComponents();
         cargarTabla();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCedula = new javax.swing.JTextField();
        txtNumeroAfiliacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBuscarCedula = new javax.swing.JButton();
        btnBuscarNum = new javax.swing.JButton();
        btnModi = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDatosPaciente = new javax.swing.JTable();
        titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        txtNumeroAfiliacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroAfiliacionActionPerformed(evt);
            }
        });
        txtNumeroAfiliacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroAfiliacionKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("BUSQUEDA POR FILTRO");

        btnBuscarCedula.setText("BUSCAR CEDULA");
        btnBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCedulaActionPerformed(evt);
            }
        });

        btnBuscarNum.setText("BUSCAR NUMERO DE AFILIACION");
        btnBuscarNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNumActionPerformed(evt);
            }
        });

        btnModi.setText("MODIFICAR");
        btnModi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModiActionPerformed(evt);
            }
        });

        botonRegresar.setText("REGRESAR");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuscarCedula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNumeroAfiliacion)
                            .addComponent(btnBuscarNum, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(btnModi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroAfiliacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCedula)
                    .addComponent(btnBuscarNum))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnModi)
                .addGap(18, 18, 18)
                .addComponent(botonRegresar)
                .addGap(36, 36, 36))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 660, 150));

        tablaDatosPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero Afiliación", "Nombres", "Apellidos", "Cédula", "Genero", "Fecha Nacimiento", "Telefono", "Fecha Registro", "Municipio"
            }
        ));
        jScrollPane2.setViewportView(tablaDatosPaciente);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 970, 210));

        titulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(0, 0, 0));
        titulo.setText("MENU - MODIFICAR DATOS DEL PACIENTE AFILIADO");
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/Imagenes/fondoModificarPaciente.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
        this.miCoordinador.mostrarVentanaGestionPaciente();
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void txtNumeroAfiliacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroAfiliacionActionPerformed
        
    }//GEN-LAST:event_txtNumeroAfiliacionActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        if (evt.getKeyChar() < 48 || evt.getKeyChar() > 57){
        evt.consume();
        }
        if(txtCedula.getText().length() >= 8){
        evt.consume();
        Toolkit.getDefaultToolkit().beep();
        }
        if(txtCedula.getText().equals(""))
            llenarTabla();
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtNumeroAfiliacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroAfiliacionKeyTyped
        if (evt.getKeyChar() < 48 || evt.getKeyChar() > 57){
        evt.consume();
        }
        if(txtNumeroAfiliacion.getText().length() >= 8){
        evt.consume();
        Toolkit.getDefaultToolkit().beep();
        }
        if(txtNumeroAfiliacion.getText().equals(""))
            llenarTabla();
    }//GEN-LAST:event_txtNumeroAfiliacionKeyTyped

    public static int objectToInt(Object obj)
    {
        int x = Integer.parseInt(obj.toString());
        return x;
    }
    
    private void btnModiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModiActionPerformed
        int fila, columna;
        fila=tablaDatosPaciente.getSelectedRow();
        columna=tablaDatosPaciente.getSelectedColumn();
        
        if(columna>=0  && fila >=0)     
            modificarTabla(columna,fila);
        else
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN PACIENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
        
        //System.out.println("fila="+fila+" columna="+columna);
    }//GEN-LAST:event_btnModiActionPerformed

    private void btnBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCedulaActionPerformed
       PacienteVO pacienteMod=new PacienteVO();
       pacienteMod=miCoordinador.buscarPaciente(txtCedula.getText());
       
       if(pacienteMod!=null){
        llenarTabla(pacienteMod);
       }else{
            JOptionPane.showMessageDialog(null, "ESTE PACIENTE NO EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
       }
       
       
    }//GEN-LAST:event_btnBuscarCedulaActionPerformed

    private void btnBuscarNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNumActionPerformed
       PacienteVO pacienteMod=new PacienteVO();
       pacienteMod=miCoordinador.buscarPaciente(Integer.parseInt(txtNumeroAfiliacion.getText()));
       if(pacienteMod!=null){  
            llenarTabla(pacienteMod);
       }else{
           JOptionPane.showMessageDialog(null, "ESTE PACIENTE NO EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
       }
       
    }//GEN-LAST:event_btnBuscarNumActionPerformed

    public void modificarTabla(int columna, int fila){
        PacienteVO pacienteMod=new PacienteVO();
        pacienteMod=miCoordinador.buscarPaciente(objectToInt(modelo.getValueAt(fila, 0)));
        
        if(columna == 0){
               JOptionPane.showMessageDialog(null,"NO PUEDE CAMBIAR EL NUMERO DE AFILIACION","ERROR", JOptionPane.ERROR_MESSAGE);
        }
        if(columna == 1){
            try{
                String nombre = JOptionPane.showInputDialog(null,"Introduzca el nombre nuevamente");
                pacienteMod.setNombre(nombre);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
              
            }
            catch(NullPointerException NE){
            
            }
            
        }if(columna == 2){
            try{
                String apellido = JOptionPane.showInputDialog(null,"Introduzca el apellido nuevamente");
                pacienteMod.setApellido(apellido);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            
            }catch(NullPointerException NE){
            
            }
            
        }if(columna == 3){
            try{
                String cedula = JOptionPane.showInputDialog(null,"Introduzca el cedula nuevamente");
                pacienteMod.setCedula(cedula);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            }
            catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error, no se pueden escribir caracteres en esta opción");
            }   
            
        }if(columna == 4){
            int gen=0;
            while((gen!=1) && (gen!=2)){
                try{
                
                    gen=Integer.parseInt(JOptionPane.showInputDialog(null,"Seleccione su genero nuevamente\n\n"
                            + "1. MASCULINO\n"
                            + "2. FEMENINO\n"
                    ));
                    

                }
                catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null,"Error, no puede escribir caracteres! ");
                    gen=0;
                }
            }
            if(gen==1)
                pacienteMod.setGenero(GeneroVO.MASCULINO);
            else
                pacienteMod.setGenero(GeneroVO.FEMENINO);
            JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            
        }if(columna == 5){
            int tipos=0;
            while((tipos<=0) || (tipos>=9)){
                try{
                
                    tipos=Integer.parseInt(JOptionPane.showInputDialog(null,"Seleccione el tipo de sangre nuevamente\n\n"
                        + "1. A\n"
                        + "2. A-\n"
                        + "3. B\n"
                        + "4. B-\n"
                        + "5. AB\n"
                        + "6. AB-\n"
                        + "7. O\n"
                        + "8. O-\n\n"));
                }
                catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null,"Error, no puede escribir caracteres! ");
                    tipos=0;
                }
            }
            if(tipos==1)
                pacienteMod.setTipoSangre(TipoSangreVO.A);
            else{
                if(tipos==2)
                    pacienteMod.setTipoSangre(TipoSangreVO.Aneg);
                else{
                    if(tipos==3)
                        pacienteMod.setTipoSangre(TipoSangreVO.B);
                    else{
                        if(tipos==4)
                            pacienteMod.setTipoSangre(TipoSangreVO.Bneg);
                        else{
                            if(tipos==5)
                                pacienteMod.setTipoSangre(TipoSangreVO.AB);
                            else{
                                if(tipos==6)
                                    pacienteMod.setTipoSangre(TipoSangreVO.ABneg);
                                else{
                                    if(tipos==7)
                                        pacienteMod.setTipoSangre(TipoSangreVO.O);
                                    else
                                        pacienteMod.setTipoSangre(TipoSangreVO.Oneg);
                                }
                            }
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
                
        }if(columna==6){
            int dia=-1,mes=-1,an=-1;
            while((dia<1) || (dia>30) || (mes<1) || (mes>12) || (an<1930) || (an>2022) )
            try{
                dia=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el dia nuevo"));
                mes=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el mes nuevo"));
                an=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el año nuevo"));
                
                FechaVO fechaNac=new FechaVO();
                fechaNac.setDia(dia); fechaNac.setMes(mes); fechaNac.setAn(an);
                pacienteMod.setFechaNacimiento(fechaNac);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            }
            catch(NullPointerException NE){
                 JOptionPane.showMessageDialog(null,"Error, no puede escribir caracteres! ");
            }
        }if(columna==7){
            try{
                String numero = JOptionPane.showInputDialog(null,"Introduzca el numerp nuevamente");
                pacienteMod.setNumeroTelefono(numero);
            }catch(NullPointerException NE){
            
            }
        }if(columna==8){
            int dia=-1,mes=-1,an=-1;
            while((dia<1) || (dia>30) || (mes<1) || (mes>12) || (an<1930) || (an>2022) )
            try{
                dia=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el dia nuevo"));
                mes=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el mes nuevo"));
                an=Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el año nuevo"));
                
                FechaVO fechaReg=new FechaVO();
                fechaReg.setDia(dia); fechaReg.setMes(mes); fechaReg.setAn(an);
                pacienteMod.setFechaRegistro(fechaReg);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            }
            catch(NullPointerException NE){
                 JOptionPane.showMessageDialog(null,"Error, no puede escribir caracteres! ");
            }
        }if(columna==9){
            int municipio=0;
            while((municipio<=0) || (municipio>=6)){
                try{
                
                    municipio=Integer.parseInt(JOptionPane.showInputDialog(null,"Seleccione el municipio nuevamente\n\n"
                        + "1. BARUTA\n"
                        + "2. CHACAO\n"
                        + "3. HATILLO\n"
                        + "4. LIBERTADOR\n"
                        + "5. SUCRE\n"));
                }
                catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null,"Error, no puede escribir caracteres! ");
                    municipio=0;
                }
            }
            if(municipio==1)
                pacienteMod.setMunicipio(MunicipioVO.BARUTA);
            else{
                if(municipio==2)
                    pacienteMod.setMunicipio(MunicipioVO.CHACAO);
                else{
                    if(municipio==3)
                        pacienteMod.setMunicipio(MunicipioVO.HATILLO);
                    else{
                        if(municipio==4)
                            pacienteMod.setMunicipio(MunicipioVO.LIBERTADOR);
                        else{
                            pacienteMod.setMunicipio(MunicipioVO.SUCRE);
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
        }if(columna==10){
            try{
                String correo = JOptionPane.showInputDialog(null,"Introduzca el correo nuevamente");
                pacienteMod.setCorreo(correo);
                JOptionPane.showMessageDialog(null, "PACIENTE MODIFICADO EXISOTAMENTE");
            }
            catch(NullPointerException NE){
            
            }
        }
        
        String resp=miCoordinador.modificarPaciente(pacienteMod);
					
	if(resp.equals("ok")){
            if((txtCedula.getText().equals("")) && (txtNumeroAfiliacion.getText().equals("")))
                llenarTabla();
            else
                llenarTabla(pacienteMod);
	}else{
            System.out.println(resp);
            JOptionPane.showMessageDialog(null, "NO SE PUDO MODIFICAR","ADVERTENCIA",JOptionPane.WARNING_MESSAGE);
	}
    }
    
    
    
    public void cargarTabla(){
        String datos[][]={};
        String columna[]={"Numero Afiliacion","Nombre","Apellidos","Cedula","Genero","Tipo Sangre","Fecha Nacimiento","Telefono","Fecha Registro","Municipio","Correo"};
        modelo=new DefaultTableModel(datos,columna){
            public boolean isCellEditable(int rowIndex, int columnIndex){return false;}
        };
        tablaDatosPaciente.setModel(modelo);
    }
    
    public void llenarTabla(PacienteVO p){
        modelo.setRowCount(0);
        int contador=0;
        
            modelo.insertRow(contador, new Object[]{});
            modelo.setValueAt(p.getId(), contador, 0);
            modelo.setValueAt(p.getNombre(), contador, 1);
            modelo.setValueAt(p.getApellido(), contador, 2);
            modelo.setValueAt(p.getCedula(), contador, 3);
            modelo.setValueAt(p.getGenero().name(), contador, 4);
            modelo.setValueAt(p.obtenerTipoCadena(p.getTipoSangre()), contador, 5);
            modelo.setValueAt(p.getFechaNacimiento().getDia()+"-"+p.getFechaNacimiento().getMes()+"-"+p.getFechaNacimiento().getAn(), contador, 6);
            modelo.setValueAt(p.getNumeroTelefono(), contador, 7);
            modelo.setValueAt(p.getFechaRegistro().getDia()+"-"+p.getFechaRegistro().getMes()+"-"+p.getFechaRegistro().getAn(), contador, 8);
            modelo.setValueAt(p.getMunicipio().name(), contador, 9);
            modelo.setValueAt(p.getCorreo(), contador, 10);
        
    }
    
    public void llenarTabla(){
        ArrayList<PacienteVO> listaPacientes=miCoordinador.getListaPacientes();
        modelo.setRowCount(0);
        int contador=0;
        for(PacienteVO p:listaPacientes){
            modelo.insertRow(contador, new Object[]{});
            modelo.setValueAt(p.getId(), contador, 0);
            modelo.setValueAt(p.getNombre(), contador, 1);
            modelo.setValueAt(p.getApellido(), contador, 2);
            modelo.setValueAt(p.getCedula(), contador, 3);
            modelo.setValueAt(p.getGenero().name(), contador, 4);
            modelo.setValueAt(p.obtenerTipoCadena(p.getTipoSangre()), contador, 5);
            modelo.setValueAt(p.getFechaNacimiento().getDia()+"-"+p.getFechaNacimiento().getMes()+"-"+p.getFechaNacimiento().getAn(), contador, 6);
            modelo.setValueAt(p.getNumeroTelefono(), contador, 7);
            modelo.setValueAt(p.getFechaRegistro().getDia()+"-"+p.getFechaRegistro().getMes()+"-"+p.getFechaRegistro().getAn(), contador, 8);
            modelo.setValueAt(p.getMunicipio().name(), contador, 9);
            modelo.setValueAt(p.getCorreo(), contador, 10);
        }
    }
    
    public void setCoordinador(Coordinador miCoordinador) {
           this.miCoordinador=miCoordinador;
       }
    
    public void limpiar(){
        txtCedula.setText("");
        txtNumeroAfiliacion.setText("");
    }
  //  public void validacionCaracteres(java.awt.event.KeyEvent evento){
  //      if(evento.getKeyChar() < 48 || >57){}
  //  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonRegresar;
    private javax.swing.JButton btnBuscarCedula;
    private javax.swing.JButton btnBuscarNum;
    private javax.swing.JButton btnModi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable tablaDatosPaciente;
    private javax.swing.JLabel titulo;
    public javax.swing.JTextField txtCedula;
    public javax.swing.JTextField txtNumeroAfiliacion;
    // End of variables declaration//GEN-END:variables

}
