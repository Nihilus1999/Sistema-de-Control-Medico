/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista.paciente;

import controlador.Coordinador;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.vo.ClinicaVO;
import modelo.vo.PacienteVO;
import modelo.vo.ReporteVO;


/**
 *
 * @author jose-
 */
public class VentanaConsultarHistorial extends javax.swing.JFrame {
    
    private Coordinador miCoordinador;
    private DefaultTableModel modelo;
    /**
     * Creates new form VentanaConsultarHistorial
     */
    public VentanaConsultarHistorial() {
        initComponents();
        cargarTabla();
        limpiar();
    }
    
    public void setCoordinador(Coordinador miCoordinador) {
        this.miCoordinador=miCoordinador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHistorial = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnDescripcion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        tablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"15/10/2020", "Chacao", "Clinica Sanatrix"},
                {"20/03/2021", "Libertador", "Hospital Perez Carre√±o"},
                {"15/08/2021", "Chacao", "Clinica El Avila"},
                {"08/04/2020", "Baruta", "Clinica Metropolitana"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Municipio", "Clinica/Hospital"
            }
        ));
        jScrollPane1.setViewportView(tablaHistorial);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("MENU - CONSULTAR HISTORIAL DEL PACIENTE");

        jLabel3.setText("INTRODUZCA ID DEL AFILIADO");

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("HISTORIAL DEL AFILIADO");

        btnBuscar.setText("BUSCAR");
        btnBuscar.setEnabled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnDescripcion.setText("DESCRIPCION");
        btnDescripcion.setEnabled(false);
        btnDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescripcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnRegresar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDescripcion)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 480, 370));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/Imagenes/FondoConsultarHistorial.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.miCoordinador.mostrarVentanaGestionPaciente();
        limpiar();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       PacienteVO pacienteMod=new PacienteVO();
       try{
          pacienteMod=miCoordinador.buscarPaciente(Integer.parseInt(txtID.getText()));
          if(pacienteMod!=null){  
            llenarTabla(Integer.parseInt(txtID.getText()));
          }else{
           JOptionPane.showMessageDialog(null, "ESTE PACIENTE NO EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
          }
       }catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "DEBE ESCRIBIR PRIMERO EL ID DEL PACIENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
       }
       
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescripcionActionPerformed
       int fila, columna;
        fila=tablaHistorial.getSelectedRow();
        columna=tablaHistorial.getSelectedColumn();
        if(columna >=0 && fila>=0){
            buscarReporte(columna, fila);
        }     
        else{
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN HISTORIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
            
    }//GEN-LAST:event_btnDescripcionActionPerformed

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
      if (evt.getKeyChar() < 48 || evt.getKeyChar() > 57){
            evt.consume();
        }
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyReleased
     habilitarBoton();   // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyReleased
public void habilitarBoton()
       {
            if (!txtID.getText().isEmpty())
            {
                btnBuscar.setEnabled(true);
            }
            else
            {
                btnBuscar.setEnabled(false);
                btnDescripcion.setEnabled(false);
            }
        }
    
    public static int objectToInt(Object obj){
        int x = Integer.parseInt(obj.toString());
        return x;
    }

    public void buscarReporte(int columna, int fila){
       try{
            ReporteVO reporte=new ReporteVO();
            reporte=miCoordinador.buscarReporte(Integer.parseInt(txtID.getText()), objectToInt(modelo.getValueAt(fila, 0)));
            miCoordinador.mostrarTextoConsultarClinica(reporte.getDescripcion());	 
       }catch(ArrayIndexOutOfBoundsException e){
           JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN HISTORIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
       }
        			
    }
    
    public void cargarTabla(){
        String datos[][]={};
        String columna[]={"ID Reporte","Fecha","Municipio","Clinica"};
        modelo=new DefaultTableModel(datos,columna){
            public boolean isCellEditable(int rowIndex, int columnIndex){return false;}
        };
        tablaHistorial.setModel(modelo);
    }
    
    public void llenarTabla(int id){
        ArrayList<ReporteVO> listaReportes=miCoordinador.getListaReportes(id);
        modelo.setRowCount(0);
        int contador=0;
        if(listaReportes.size()>0){
            for(ReporteVO r:listaReportes){
                modelo.insertRow(contador, new Object[]{});
                modelo.setValueAt(r.getIdReporte(), contador, 0);
                modelo.setValueAt(r.getFechaRegistro().getDia()+"-"+r.getFechaRegistro().getMes()+"-"+r.getFechaRegistro().getAn(), contador, 1);
                modelo.setValueAt(r.getMunicipio().name(), contador, 2);
                modelo.setValueAt(r.getClinica(), contador, 3);
                btnDescripcion.setEnabled(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "ESTE PACIENTE NO TIENE HISTORIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void vaciarTabla(){
        ArrayList<PacienteVO> listaPacientes=miCoordinador.getListaPacientes();
        modelo.setRowCount(0);
        int contador=modelo.getRowCount();
        for(int i = contador; i >0; i--){
            modelo.removeRow(i);
        }
    }
    
    public void limpiar(){
        try{
            txtID.setText("");
            vaciarTabla();
            btnDescripcion.setEnabled(false);
            btnBuscar.setEnabled(false);
        }catch(NullPointerException e){
            txtID.setText("");
        }
    }
    
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDescripcion;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tablaHistorial;
    public javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
